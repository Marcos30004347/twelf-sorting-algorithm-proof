% make sources.cfg
%
%
% After in_ord inserts an element into a sorted list, the list remains sorted.
%
inv_sort_thm : sorted L -> in_ord L E L' -> sorted L' -> type.
%mode inv_sort_thm +D1 +D2 -D3.

inv_sort_thm_nil : inv_sort_thm sorted_nil in_ord_nil sorted_one.

% {X1:nat} {X2:list} {X3:nat} {X4:sorted (cons X1 X2)} {X5:leq X3 X1}
%    {X6:sorted (cons X3 (cons X1 X2))}
%    |- inv_sort_thm X4 (in_ord_leq X5) X6.
inv_sort_thm_leq : inv_sort_thm
  Sorted_L
  (in_ord_leq Leq_E_Lhead)
  (sorted_con Sorted_L Leq_E_Lhead).

% {X1:nat} {X2:list} {X3:nat} {X4:list} {X5:sorted (cons X1 X2)}
%				{X6:in_ord X2 X3 X4} {X7:grt X3 X1} {X8:sorted (cons X1 X4)}
%				|- inv_sort_thm X5 (in_ord_gth X6 X7) X8.
inv_sort_thm_gth1: inv_sort_thm
										Sorted_L
										(in_ord_gth InOrd_Ltail_E Gth_E_Lhead)
										(sorted_con Sorted_L Leq_Lhead_E) <- inv_grt Gth_E_Lhead Leq_Lhead_E.

% {X1:nat} {X2:nat} {X3:list} {X4:nat} {X5:list}
%    {X6:sorted (cons X1 (cons X2 X3))} {X7:in_ord X3 X4 X5} {X8:grt X4 X2}
%    {X9:grt X4 X1} {X10:sorted (cons X1 (cons X2 X5))}
%    |- inv_sort_thm X6 (in_ord_gth (in_ord_gth X7 X8) X9) X10.
inv_sort_thm_gth2: inv_sort_thm
										(sorted_con Sorted_X2 X1_Less_X2head)
										(in_ord_gth IN_ORD_X2_X3 X3_GTH_X1)
										(sorted_con Sorted_X9 X1_LEQ_X3)
										<- inv_sort_thm Sorted_X2 IN_ORD_X2_X3 Sorted_X9
										<- inv_grt X3_GTH_X1 X1_LEQ_X3.


% {X1:nat} {X2:nat} {X3:grt X2 X1} {X4:sorted (cons X1 (cons X2 nil))}
%    |- inv_sort_thm sorted_one (in_ord_gth in_ord_nil X3) X4
inv_sort_thm_gth3: inv_sort_thm
										sorted_one
										(in_ord_gth in_ord_nil X2_GRT_X1)
										(sorted_con sorted_one X1_LEQ_X2)
										<- inv_grt X2_GRT_X1 X1_LEQ_X2.


% {X1:nat} {X2:nat} {X3:list} {X4:nat} {X5:list} {X6:sorted (cons X2 X3)}
%    {X7:leq X1 X2} {X8:in_ord X3 X4 X5} {X9:grt X4 X2} {X10:grt X4 X1}
%    {X11:sorted (cons X1 (cons X2 X5))}
%    |- inv_sort_thm (sorted_con X6 X7) (in_ord_gth (in_ord_gth X8 X9) X10) X11.
inv_sort_thm_gth4: inv_sort_thm
										(sorted_con Sorted_X2_X3 X1_LEQ_X2)
										(in_ord_gth InOrd_E_X3 E_GRT_X3)
										(sorted_con Sorted_X2_X3_E X1_LEQ_X2)
										<- inv_sort_thm Sorted_X2_X3 InOrd_E_X3 Sorted_X2_X3_E.

%worlds () (inv_sort_thm _ _ _).
%total D (inv_sort_thm D _ _).

%
% 'sort' sorts a list.
%

% sort_thm : sort L L' -> sorted L' -> type.
% %mode sort_thm +SORT -SORTED.

% sort_thm_nil : sort_thm sort_nil sorted_nil.

% %worlds () (sort_thm _ _).
% %total D (sort_thm D _).